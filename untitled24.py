# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jCTi1m5TnEmL6cpi-Ilf0IkvX7yfqxaq
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data=pd.read_csv('IMDB-Movie-Data.csv')

"""1. Top 10 Rows of The Dataset"""

data.head(10)

"""2. Top 10 Rows of The Dataset"""

data.tail(10)

"""3. Number of Rows And Columns"""

data.shape

print ("Number of Rows", data.shape[0])
print ("Number of Columns", data.shape[1])

"""4. Info about Our Dataset"""

data.info()

"""5. Check Missing Values in The Dataset"""

print("Any missing valus?", data.isnull().values.any())



data.isnull().sum()

sns.heatmap(data.isnull())

per_missing=data.isnull().sum()*100/len(data)
per_missing

"""6. Drop All The Missing Values"""

data.dropna(axis=0)

"""7. Check For Duplicate Data"""

dup_data=data.duplicated().any()

print("Are there any duplicate values?",dup_data)

data=data.drop_duplicates()
data

"""8.Get Overall Statistics About The DataFrame"""

data.describe(include='all')

"""9. Title of The Movie Having Runtime>=180 Minutes"""

data.columns

data[data['Runtime (Minutes)']>=180] ['Title']

"""10. In Which Year There Was The  Highest Voting"""

data.columns

data.groupby('Year')['Votes'].mean().sort_values(ascending=False)

sns.barplot(x='Year',y='Votes',data=data)
plt.title('Year by Votes')
plt.show()

"""11. In Which Year There Was The Highest Average Revenue"""

data.columns

data.groupby('Year')['Revenue (Millions)'].mean().sort_values(ascending=False)

sns.barplot(x='Year',y='Revenue (Millions)',data=data)
plt.title('Year by Revenue')
plt.show()

"""Average Rating For Each Director"""

data.columns

data.groupby('Director')['Rating'].mean().sort_values(ascending=False)

"""13. Top 10 Lengthy Movie Title and Runtime"""

data.columns

top10_len=data.nlargest(10,'Runtime (Minutes)')[['Title','Runtime (Minutes)']]\
.set_index('Title')

top10_len

sns.barplot(x='Runtime (Minutes)',y=top10_len.index,data=top10_len)
plt.title('Top 10 Lengthy Movie Title and Runtime')
plt.show()

"""14. Number of Movie Pre Year"""

data.columns

data['Year'].value_counts()

sns.countplot(x='Year',data=data)
plt.title('Number of Movie Pre Year')
plt.show()

"""15. Find Most Popular Movie"""

data.columns

data[data['Revenue (Millions)'].max()==data['Revenue (Millions)']]['Title']

"""16. Top 10 Highest Rated Movie and Director"""

data.columns

top10_len=data.nlargest(10,'Rating')[['Title','Rating','Director']]\
.set_index('Title')

top10_len

sns.barplot(x='Rating',y=top10_len.index,data=top10_len, hue='Director',dodge=False)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.title('Top 10 Highest Rated Movie and Director')
plt.show()

"""17. Top 10 Highest Revenue Movie Titles"""

data.columns

top_10=data.nlargest(10,'Revenue (Millions)')[['Title','Revenue (Millions)']].\
set_index('Title')

top_10

sns.barplot(x='Revenue (Millions)',y=top_10.index,data=top_10)
plt.title('Top 10 Highest Revenue Movie Titles')
plt.show()

"""18. Average Rating of movies year wise"""

data.columns

data.groupby('Year')['Rating'].mean().sort_values(ascending=False)

"""19. Does Rating Affect The Revenue?"""

data.columns

sns.scatterplot(x='Rating',y='Revenue (Millions)',data=data)
plt.title('Rating Affect The Revenue')
plt.show()

"""20. Movies Based on Ratings"""

data.columns

def rating(rating):
    if rating>=7.0:
        return 'Excelient'
    elif rating>=6.0:
        return 'Good'
    else:
        return 'Average'

data['rating_cat']=data['Rating'].apply(rating)

data.head()

"""21. Count Number of Action Movies"""

data.columns

data['Genre'].dtype

len(data[data['Genre'].str.contains('Action',case=False)])

"""Unique Values From Genera"""

data.columns

data['Genre']

list1=[]
for value in data['Genre']:
     list1.append(value.split(','))

list1

one_d=[]
for item in list1:
    for item1  in item:
        one_d.append(item1)

one_d

uni_list=[]
for item in one_d:
    if item not in uni_list:
        uni_list.append(item)

uni_list

"""23. How Many Films of Each Genre Were Made"""

one_d=[]
for item in list1:
    for item1  in item:
        one_d.append(item1)

from collections import Counter

Counter(one_d)